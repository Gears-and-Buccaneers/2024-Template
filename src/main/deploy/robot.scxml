<scxml initial="ReadyToPickup" version="1.0" xmlns="http://www.w3.org/2005/07/scxml" xmlns:gnb="http://dawsonschool.org/robotics/2972" xmlns:viz="http://phrogz.net/visual-scxml">
	<viz:actions>
		<!-- this block is not required, nor does it need to be kept up-to-date;
			 it just allows these custom actions to be created/edited in the visual editor -->
		<gnb:enableDriving>
			<viz:attribute max="1" min="0" name="value" type="int"/>
		</gnb:enableDriving>
		<gnb:robotToggle>
			<viz:attribute name="key" type="choice" values="armRaised,gripperOpen"/>
			<viz:attribute max="1" min="0" name="value" type="int"/>
		</gnb:robotToggle>
		<gnb:doMagic>
			<viz:attribute name="magic" type="choice" values="(none),alignToPiece,extendBoom,retractBoom,autoReverse,driveToGrid"/>
		</gnb:doMagic>
		<gnb:calibrate/>
		<assign>
			<viz:attribute name="location" type="string"/>
			<viz:attribute name="expr" type="string"/>
		</assign>
	</viz:actions>
	<datamodel>
		<!-- these variables can only be changed by <assign /> actions -->
		<data expr="false" id="grabbablePieceDetected"/>
		<data expr="false" id="aprilTagInView"/>
		<data expr="true" id="boomRetracted"/>
	</datamodel>
	<parallel id="RobotControl" viz:xywh="-90 -300 1140 540">
		<state id="ControlModes" viz:xywh="-90 -270 600 510">
			<state id="ReadyToPickup" viz:rgb="0c8330" viz:xywh="-50 -190 120 40">
				<onentry>
					<gnb:output message="Entered ReadyToPickup"/>
					<gnb:enableDriving value="1"/>
				</onentry>
				<transition event="gripper" target="PieceHeld" viz:offset="5" viz:pts="S20 N20">
					<gnb:robotToggle key="gripperOpen" value="0"/>
				</transition>
				<transition cond="grabbablePieceDetected" event="magic.down" target="AutoAlign"/>
			</state>
			<state id="AutoAlign" viz:rgb="621e1e" viz:xywh="150 -190 120 40">
				<onentry>
					<gnb:output message="Entered AutoAlign"/>
					<gnb:doMagic magic="alignToPiece"/>
					<gnb:enableDriving value="0"/>
				</onentry>
				<transition event="magic.up" target="ReadyToPickup"/>
				<transition cond="not grabbablePieceDetected" target="ReadyToPickup" viz:pts="S0 Y-100 S120"/>
				<onexit>
					<gnb:doMagic magic="(none)"/>
				</onexit>
			</state>
			<state id="PieceHeld" viz:rgb="0c8330" viz:xywh="-50 -60 120 40">
				<onentry>
					<gnb:output message="Entered PieceHeld"/>
					<gnb:enableDriving value="1"/>
				</onentry>
				<transition event="gripper" target="ReadyToPickup" viz:offset="5 0" viz:pts="N90 S90">
					<gnb:robotToggle key="gripperOpen" value="1"/>
				</transition>
				<transition event="magic.down" target="ReadyToReturn">
					<gnb:robotToggle key="armRaised" value="1"/>
				</transition>
			</state>
			<state id="ReadyToReturn" viz:rgb="0c8330" viz:xywh="-50 40 120 40">
				<onentry>
					<gnb:output message="Entered ReadyToReturn"/>
					<gnb:enableDriving value="1"/>
				</onentry>
				<transition cond="aprilTagsDetected" event="magic.down" target="AutoDriveToGrid" viz:pts="S0 N0"/>
				<transition event="boom.extend" target="AtGridFull" viz:align="E" viz:offset="10" viz:pts="E40 X60 N5"/>
				<transition event="gripper" target="AtGridEmpty" viz:align="E" viz:pts="E0 W0">
					<gnb:robotToggle key="gripperOpen" value="1"/>
				</transition>
			</state>
			<state id="AutoDriveToGrid" viz:rgb="621e1e" viz:xywh="-50 150 120 40">
				<onentry>
					<gnb:doMagic magic="driveToGrid"/>
					<gnb:enableDriving value="0"/>
				</onentry>
				<transition event="magic.up" target="ReadyToReturn" viz:pts="N50 S50"/>
				<transition cond="not aprilTagsDetected" target="ReadyToReturn" viz:pts="N70 S70"/>
				<transition event="magic.done" target="AutoExtendBoom"/>
				<onexit>
					<gnb:doMagic magic="(none)"/>
				</onexit>
			</state>
			<state id="AutoExtendBoom" viz:rgb="621e1e" viz:xywh="150 150 120 40">
				<onentry>
					<gnb:doMagic magic="extendBoom"/>
					<gnb:enableDriving value="0"/>
				</onentry>
				<transition event="magic.done" target="AtGridFull"/>
				<!-- TODO: what should we do if the driver
						releases magic button before we
						think boom is fully extended?-->
				<onexit>
					<gnb:doMagic magic="(none)"/>
				</onexit>
			</state>
			<state id="AtGridFull" viz:rgb="0c8330" viz:xywh="340 150 120 40">
				<onentry>
					<gnb:enableDriving value="1"/>
				</onentry>
				<transition event="calibrate" viz:align="E" viz:offset="5" viz:pts="E20">
					<gnb:calibrate/>
				</transition>
				<transition event="gripper" target="AtGridEmpty">
					<gnb:robotToggle key="gripperOpen" value="1"/>
				</transition>
			</state>
			<state id="AtGridEmpty" viz:rgb="0c8330" viz:xywh="340 40 120 40">
				<onentry>
					<gnb:output message="Entered AtGridEmpty"/>
					<gnb:enableDriving value="1"/>
				</onentry>
				<transition event="calibrate" viz:align="E" viz:offset="5" viz:pts="E20">
					<gnb:calibrate/>
				</transition>
				<transition event="magic.down" target="AtGridRetracting" viz:pts="N100 S100"/>
				<transition event="boom.retract" target="AtGridRetracting" viz:pts="N30 S30"/>
			</state>
			<state id="AtGridRetracting" viz:rgb="621e1e" viz:xywh="340 -60 120 40">
				<onentry>
					<gnb:doMagic magic="retractBoom"/>
					<gnb:enableDriving value="0"/>
				</onentry>
				<transition event="arm.lower" target="ReadyToPickup" viz:pts="W0 Y-100 S120">
					<gnb:robotToggle key="armRaised" value="0"/>
				</transition>
				<transition condition="boomRetracted" event="magic.down" target="AtGridAutoBackup"/>
			</state>
			<state id="AtGridAutoBackup" viz:rgb="621e1e" viz:xywh="340 -190 120 40">
				<onentry>
					<gnb:doMagic magic="autoReverse"/>
					<gnb:enableDriving value="0"/>
				</onentry>
				<transition event="arm.lower" target="ReadyToPickup" viz:pts="S0 Y-100 S120">
					<gnb:robotToggle key="armRaised" value="0"/>
				</transition>
				<transition event="magic.up" target="ReadyToPickup" viz:pts="N100 Y-240 N60"/>
				<transition event="magic.done" target="ReadyToPickup" viz:pts="N20 Y-240 N60"/>
			</state>
		</state>
		<state id="Boom" viz:rgb="2d0606" viz:xywh="510 -270 180 510">
			<state id="Retracted" viz:xywh="540 -210 120 40">
				<onentry>
					<assign expr="true" location="boomRetracted"/>
				</onentry>
				<transition event="boom.extending" target="Extendedish"/>
			</state>
			<state id="Extendedish" viz:xywh="540 -100 120 40">
				<onentry>
					<assign expr="false" location="boomRetracted"/>
				</onentry>
				<transition event="boom.retracted" target="Retracted"/>
			</state>
		</state>
		<state id="GamePiece" viz:rgb="14263e" viz:xywh="690 -270 180 510">
			<state id="NoPiece" viz:xywh="720 -210 120 40">
				<onentry>
					<assign expr="true" location="grabbablePieceDetected"/>
				</onentry>
				<transition event="piece.found" target="PieceFound"/>
			</state>
			<state id="PieceFound" viz:xywh="720 -100 120 40">
				<onentry>
					<assign expr="false" location="grabbablePieceDetected"/>
				</onentry>
				<transition event="piece.lost" target="NoPiece"/>
			</state>
		</state>
		<state id="AprilTags" viz:rgb="443f08" viz:xywh="870 -270 180 510">
			<state id="NoTag" viz:xywh="900 -210 120 40">
				<onentry>
					<assign expr="true" location="aprilTagInView"/>
				</onentry>
				<transition event="apriltag.found" target="TagInView"/>
			</state>
			<state id="TagInView" viz:xywh="900 -100 120 40">
				<onentry>
					<assign expr="false" location="aprilTagInView"/>
				</onentry>
				<transition event="apriltag.lost" target="NoTag"/>
			</state>
		</state>
	</parallel>
</scxml>
